;; Analyzed by ClojureScript 1.8.51
{:use-macros {display-banner devtools.util}, :excludes #{}, :name devtools.core, :imports nil, :requires {prefs devtools.prefs, sanity-hints devtools.sanity-hints, custom-formatters devtools.custom-formatters, devtools.sanity-hints devtools.sanity-hints, devtools.util devtools.util, devtools.version devtools.version, goog.userAgent goog.userAgent, ua goog.userAgent, devtools.custom-formatters devtools.custom-formatters, devtools.prefs devtools.prefs}, :uses {get-current-version devtools.version}, :defs {is-feature-available? {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 37, :column 7, :end-line 37, :end-column 28, :arglists (quote ([feature]))}, :name devtools.core/is-feature-available?, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 28, :method-params ([feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([feature]))}, enable! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 65, :column 7, :end-line 65, :end-column 14, :arglists (quote ([]))}, :name devtools.core/enable!, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-prefs {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 31, :column 7, :end-line 31, :end-column 16, :arglists (quote ([]))}, :name devtools.core/get-prefs, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-pref! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 34, :column 7, :end-line 34, :end-column 16, :arglists (quote ([pref val]))}, :name devtools.core/set-pref!, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 16, :method-params ([pref val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pref val]))}, feature-available? {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 105, :column 7, :end-line 105, :end-column 25, :arglists (quote ([& _features])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_features)], :arglists ([& _features]), :arglists-meta (nil)}}, :name devtools.core/feature-available?, :variadic true, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_features)], :arglists ([& _features]), :arglists-meta (nil)}, :method-params [(_features)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 0, :fn-var true, :arglists ([& _features])}, make-version-info {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 12, :column 17, :end-line 12, :end-column 34, :dynamic true, :arglists (quote ([]))}, :name devtools.core/make-version-info, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 34, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, warn-feature-not-available {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 23, :column 17, :end-line 23, :end-column 43, :dynamic true, :arglists (quote ([feature]))}, :name devtools.core/warn-feature-not-available, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 43, :method-params ([feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([feature]))}, set-single-feature! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 75, :column 7, :end-line 75, :end-column 26, :arglists (quote ([_feature _val]))}, :name devtools.core/set-single-feature!, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 26, :method-params ([_feature _val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_feature _val]))}, install! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 42, :column 7, :end-line 42, :end-column 15, :arglists (quote ([] [features-to-install])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [features-to-install]), :arglists ([] [features-to-install]), :arglists-meta (nil nil)}}, :name devtools.core/install!, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [features-to-install]), :arglists ([] [features-to-install]), :arglists-meta (nil nil)}, :method-params ([] [features-to-install]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists ([] [features-to-install])}, set-prefs! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 28, :column 7, :end-line 28, :end-column 17, :arglists (quote ([new-prefs]))}, :name devtools.core/set-prefs!, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 17, :method-params ([new-prefs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([new-prefs]))}, make-lib-info {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 16, :column 17, :end-line 16, :end-column 30, :dynamic true, :arglists (quote ([]))}, :name devtools.core/make-lib-info, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, enable-single-feature! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 80, :column 7, :end-line 80, :end-column 29, :arglists (quote ([_feature]))}, :name devtools.core/enable-single-feature!, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 29, :method-params ([_feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_feature]))}, disable! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 70, :column 7, :end-line 70, :end-column 15, :arglists (quote ([]))}, :name devtools.core/disable!, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, features-to-install-by-default {:name devtools.core/features-to-install-by-default, :file "resources/public/js/compiled/out/devtools/core.cljs", :line 10, :column 1, :end-line 10, :end-column 36, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 10, :column 6, :end-line 10, :end-column 36}}, known-features {:name devtools.core/known-features, :file "resources/public/js/compiled/out/devtools/core.cljs", :line 9, :column 1, :end-line 9, :end-column 20, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 9, :column 6, :end-line 9, :end-column 20}}, single-feature-available? {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 100, :column 7, :end-line 100, :end-column 32, :arglists (quote ([_feature]))}, :name devtools.core/single-feature-available?, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 32, :method-params ([_feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_feature]))}, enable-feature! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 90, :column 7, :end-line 90, :end-column 22, :arglists (quote ([& _features])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_features)], :arglists ([& _features]), :arglists-meta (nil)}}, :name devtools.core/enable-feature!, :variadic true, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_features)], :arglists ([& _features]), :arglists-meta (nil)}, :method-params [(_features)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists ([& _features])}, disable-single-feature! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 85, :column 7, :end-line 85, :end-column 30, :arglists (quote ([_feature]))}, :name devtools.core/disable-single-feature!, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 30, :method-params ([_feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_feature]))}, disable-feature! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 95, :column 7, :end-line 95, :end-column 23, :arglists (quote ([& _features])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_features)], :arglists ([& _features]), :arglists-meta (nil)}}, :name devtools.core/disable-feature!, :variadic true, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_features)], :arglists ([& _features]), :arglists-meta (nil)}, :method-params [(_features)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 0, :fn-var true, :arglists ([& _features])}, uninstall! {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 59, :column 7, :end-line 59, :end-column 17, :arglists (quote ([]))}, :name devtools.core/uninstall!, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, missing-feature-warning {:protocol-inline nil, :meta {:file "/Users/yo/projects/wordthing/resources/public/js/compiled/out/devtools/core.cljs", :line 19, :column 17, :end-line 19, :end-column 40, :dynamic true, :arglists (quote ([feature known-features]))}, :name devtools.core/missing-feature-warning, :variadic false, :file "resources/public/js/compiled/out/devtools/core.cljs", :end-column 40, :method-params ([feature known-features]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([feature known-features]))}}, :require-macros {devtools.version devtools.version, devtools.util devtools.util}, :cljs.analyzer/constants {:seen #{:sanity-hints :custom-formatters :dont-display-banner}, :order [:custom-formatters :sanity-hints :dont-display-banner]}, :doc nil}